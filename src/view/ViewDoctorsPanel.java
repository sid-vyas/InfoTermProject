/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.dataModels.Doctor;
import model.directories.DoctorDirectory;

/**
 *
 * @author ASUS
 */
public class ViewDoctorsPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewDoctorsPanel
     */
    DoctorDirectory allDoctors;
    
    public ViewDoctorsPanel(DoctorDirectory allDoctors) {
        initComponents();
        this.allDoctors = allDoctors;
        
        populateTable();
        usernameField.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        jScrollPane = new javax.swing.JScrollPane();
        doctorListTable = new javax.swing.JTable();
        titleLabel = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        ageField = new javax.swing.JTextField();
        mainTitleLabel1 = new javax.swing.JLabel();
        specializationLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        specializationField = new javax.swing.JTextField();
        usernameField = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        maleButton = new javax.swing.JRadioButton();
        nameField = new javax.swing.JTextField();
        femaleButton = new javax.swing.JRadioButton();
        hospitalNameLabel = new javax.swing.JLabel();
        otherGenderButton = new javax.swing.JRadioButton();
        hospitalNameField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        communityLabel = new javax.swing.JLabel();
        communityMenu = new javax.swing.JComboBox<>();
        ageLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 153));

        doctorListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor Name", "Hospital Name", "Specialization", "Gender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane.setViewportView(doctorListTable);

        titleLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        titleLabel.setText("Search Doctors");

        deleteButton.setText("Delete Entry");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        viewButton.setText("View Details");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        ageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageFieldActionPerformed(evt);
            }
        });

        mainTitleLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        mainTitleLabel1.setText("Edit Profile:");

        specializationLabel.setText("Specialization:");

        usernameLabel.setText("Username:");

        specializationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                specializationFieldActionPerformed(evt);
            }
        });

        usernameField.setBackground(new java.awt.Color(204, 204, 204));
        usernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameFieldActionPerformed(evt);
            }
        });

        genderLabel.setText("Gender:");

        nameLabel.setText("Name:");

        genderButtonGroup.add(maleButton);
        maleButton.setText("Male");
        maleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleButtonActionPerformed(evt);
            }
        });

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        genderButtonGroup.add(femaleButton);
        femaleButton.setText("Female");
        femaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleButtonActionPerformed(evt);
            }
        });

        hospitalNameLabel.setText("Hospital Name:");

        genderButtonGroup.add(otherGenderButton);
        otherGenderButton.setText("Other");
        otherGenderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherGenderButtonActionPerformed(evt);
            }
        });

        hospitalNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalNameFieldActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        communityLabel.setText("Community:");

        communityMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Uptown", "Downtown", "York" }));
        communityMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                communityMenuActionPerformed(evt);
            }
        });

        ageLabel.setText("Age:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 594, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titleLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(viewButton)
                        .addGap(193, 193, 193)
                        .addComponent(deleteButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(nameLabel)
                                    .addGap(21, 21, 21))
                                .addComponent(usernameLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(hospitalNameLabel)
                                    .addGap(18, 18, 18))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(communityLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(hospitalNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(communityMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(specializationLabel)
                    .addComponent(genderLabel)
                    .addComponent(ageLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(specializationField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(maleButton)
                                    .addGap(18, 18, 18)
                                    .addComponent(femaleButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(otherGenderButton)))))
                    .addComponent(mainTitleLabel1))
                .addGap(62, 62, 62))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(mainTitleLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hospitalNameLabel)
                            .addComponent(hospitalNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(communityLabel)
                            .addComponent(communityMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLabel)
                            .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLabel)
                            .addComponent(maleButton)
                            .addComponent(femaleButton)
                            .addComponent(otherGenderButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(specializationLabel)
                            .addComponent(specializationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(viewButton)
                            .addComponent(deleteButton))))
                .addContainerGap(433, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = doctorListTable.getSelectedRow();
        if(selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an entry to be deleted", "Error", HEIGHT);
        } else {
            DefaultTableModel model = (DefaultTableModel) doctorListTable.getModel();
            Doctor doctor = (Doctor) model.getValueAt(selectedIndex, 0);
            allDoctors.removeDoctor(doctor);
            JOptionPane.showMessageDialog(this, "The selected entry is successfully deleted", "Deleted", HEIGHT);
            populateTable();
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = doctorListTable.getSelectedRow();
        if (selectedIndex <0){
            JOptionPane.showMessageDialog(this, "Please select an entry to view", "Error", HEIGHT);
            return;
        }
             
        DefaultTableModel model = (DefaultTableModel) doctorListTable.getModel();
        Doctor selectedDoctor = (Doctor) model.getValueAt(selectedIndex, 0);
        
        usernameField.setText(selectedDoctor.getUserId());
        nameField.setText(selectedDoctor.getName());
        hospitalNameField.setText(selectedDoctor.getHospitalName());
        communityMenu.setSelectedItem(selectedDoctor.getCommunity());
        ageField.setText(Integer.toString(selectedDoctor.getAge()));
        
        String gender = selectedDoctor.getGender();
        if(gender.equals("Male"))
            maleButton.setEnabled(true);
        else if(gender.equals("Female"))
            femaleButton.setEnabled(true);
        else
            otherGenderButton.setEnabled(true);
        
        specializationField.setText(selectedDoctor.getSpecialization());
    }//GEN-LAST:event_viewButtonActionPerformed

    private void ageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageFieldActionPerformed

    private void specializationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_specializationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_specializationFieldActionPerformed

    private void usernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameFieldActionPerformed

    private void maleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleButtonActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void femaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleButtonActionPerformed

    private void otherGenderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherGenderButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherGenderButtonActionPerformed

    private void hospitalNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hospitalNameFieldActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        int selectedIndex = doctorListTable.getSelectedRow();
        if(selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select an entry to be updated", "Error", HEIGHT);
        } else {
            try{
                DefaultTableModel model = (DefaultTableModel) doctorListTable.getModel();
                Doctor doctor = (Doctor) model.getValueAt(selectedIndex, 0);
            
                doctor.setUserId(usernameField.getText());
                doctor.setName(nameField.getText());
                doctor.setHospitalName(hospitalNameField.getText());
                doctor.setCommunity(communityMenu.getSelectedItem().toString());

                if(Integer.parseInt(ageField.getText()) < 22 || Integer.parseInt(ageField.getText()) > 65) {
                    ageField.setBorder(BorderFactory.createLineBorder(Color.red));
                    JOptionPane.showMessageDialog(this, "Please enter an age between 22 and 65", "Error", HEIGHT);
                    return;
                } else {
                    doctor.setAge(Integer.parseInt(ageField.getText()));
                }

                if(maleButton.isSelected()) {
                    doctor.setGender("Male");
                } else if(femaleButton.isSelected()) {
                    doctor.setGender("Female");
                } else if(otherGenderButton.isSelected()) {
                    doctor.setGender("Other");
                } else {
                    JOptionPane.showMessageDialog(this, "Please select a Gender option", "Error", HEIGHT);
                    return;
                }

                doctor.setSpecialization(specializationField.getText());


                JOptionPane.showMessageDialog(this, "The selected entry is successfully updated", "Updated", HEIGHT);
                populateTable();
                emptyTextFields();

            } catch(Exception e) {
                JOptionPane.showMessageDialog(this, "Please enter all your details", "Error", HEIGHT);
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void communityMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_communityMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_communityMenuActionPerformed

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) doctorListTable.getModel();
        model.setRowCount(0);
        for(Doctor doc : allDoctors.getAllDoctors()) {
            Object[] row = new Object[4];
            row[0] = doc;
            row[1] = doc.getHospitalName();
            row[2] = doc.getSpecialization();
            row[3] = doc.getGender();
            model.addRow(row);
        }
    }
    
    private void emptyTextFields() {
        usernameField.setText("");
        nameField.setText("");
        hospitalNameField.setText("");
        communityMenu.setSelectedItem("");
        ageField.setText("");
        
        if(maleButton.isEnabled())
            maleButton.setEnabled(false);
        else if(femaleButton.isEnabled())
            femaleButton.setEnabled(false);
        else
            otherGenderButton.setEnabled(false);
        
        specializationField.setText("");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ageField;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JLabel communityLabel;
    private javax.swing.JComboBox<String> communityMenu;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable doctorListTable;
    private javax.swing.JRadioButton femaleButton;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JTextField hospitalNameField;
    private javax.swing.JLabel hospitalNameLabel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel mainTitleLabel1;
    private javax.swing.JRadioButton maleButton;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JRadioButton otherGenderButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField specializationField;
    private javax.swing.JLabel specializationLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField usernameField;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
